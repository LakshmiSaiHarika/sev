name: SEV CI PR test Draft

on:
  pull_request_target:
    types:
      - reopened
      - opened
      - edited
      - synchronize
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: 'Specify the pull request number'
      pull_request_branch:
        description: 'Specify pull request source branch'

jobs:
  snp_host_tests:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Verify if SNP is enabled on the host
        run: |
              source ./.github/workflows/snp_function_declarations.sh
              verify_snp_host

      - name: Set the PR number and PR branch environment based on GH Action event type
        run: |
            event_pr_number=''
            event_pr_branch=''
            
            if [ ${{ github.event_name }} == "pull_request_target" ]; then
              event_pr_number=${{ github.event.pull_request.number }}
              event_pr_branch=${{ github.head_ref }}
            elif [ ${{ github.event_name }} == "workflow_dispatch" ]; then
              event_pr_number=${{ github.event.inputs.pull_request_number }}
              event_pr_branch=${{ github.event.inputs.pull_request_branch }}
            fi

            echo "pr_number=${event_pr_number}" >> $GITHUB_ENV
            echo "pr_branch=${event_pr_branch}" >> $GITHUB_ENV

      - name: Show the GH environment variable current values
        run: |
            echo "GH Action PR number = ${{ env.pr_number }}"
            echo "GH Action PR branch = ${{ env.pr_branch }}"
            
      - name: Run sev library cargo test on the host(without flags)
        run: |
              # Give user access to /dev/sev to run cargo tests w/o permission issues
              sudo usermod -a -G kvm $USER
              sudo setfacl -m g:kvm:rw /dev/sev

              # Install dependencies on the host
              source ./.github/workflows/snp_function_declarations.sh
              install_rust_on_host
              
              # Fetch and checkout SEV PR on the host
              rm -rf ~/sev
              git clone https://github.com/LakshmiSaiHarika/sev.git
              cd sev
              
              # Checkout the PR branch
              if [[ ${{ github.event_name }} == "pull_request_target" || ${{ github.event_name }} == "workflow_dispatch" ]]; then
                git fetch origin pull/${{ env.pr_number }}/head:${{ env.pr_branch }}
                git switch ${{ env.pr_branch }}
              fi

              # Cargo SEV PR test on the host
              cargo test

  snp_guest_tests:
    runs-on: self-hosted
    needs: snp_host_tests
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Sleep for 35 seconds
        run: sleep 35
        
      - name: Set the next available guest network port number
        run: |
            echo "guest_port_in_use=$(python ${HOME}/automation_scripts/handle_guest_network_ports.py get-next-available-port-number)" >> $GITHUB_ENV
            
      - name: Set the PR number and PR branch environment based on GH Action event type
        run: |
            event_pr_number=''
            event_pr_branch=''
            
            if [ ${{ github.event_name }} == "pull_request_target" ]; then
              event_pr_number=${{ github.event.pull_request.number }}
              event_pr_branch=${{ github.head_ref }}
            elif [ ${{ github.event_name }} == "workflow_dispatch" ]; then
              echo "workflow dispatch"
              event_pr_number=${{ github.event.inputs.pull_request_number }}
              event_pr_branch=${{ github.event.inputs.pull_request_branch }}
            fi
             
            echo "pr_number=${event_pr_number}" >> $GITHUB_ENV
            echo "pr_branch=${event_pr_branch}" >> $GITHUB_ENV
        
      - name: Show the GH environment variable current values
        run: |
            echo "current guest port in use = ${{ env.guest_port_in_use }}"
            echo "GH Action PR number = ${{ env.pr_number }}"
            echo "GH Action PR branch = ${{ env.pr_branch }}"

      - name: Launch SNP enabled guest
        run: |
          rm -rf ~/snp.sh
          wget https://raw.githubusercontent.com/LakshmiSaiHarika/sev-utils/Fedora-Latest-SNP-kernel-Upstream/tools/snp.sh
          chmod +x snp.sh
          
          export GUEST_NAME=snp-guest-sev-${{ github.event.inputs.pull_request_number }}
          export HOST_SSH_PORT=${{ env.guest_port_in_use }}
          
          ./snp.sh launch-guest

      - name: Show SNP enabled guest qemu commandline 
        run:  cat ~/snp/launch/${GUEST_NAME}/qemu.cmdline  
    
      - name: Verify SNP on the guest via MSR
        run: |
          source ./.github/workflows/snp_function_declarations.sh
          verify_snp_guest_msr ${{ github.event.inputs.pull_request_number }} ${{ env.guest_port_in_use }}

      - name: Run sev library cargo test on the guest(without flags)
        run: |
          source ./.github/workflows/snp_function_declarations.sh
          
          # Install sev dependencies as a root user
           ssh_guest_command "sudo su - <<EOF
           curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -sSf | sh -s -- -y
           source "${HOME}/.cargo/env" 2>/dev/null
           sudo dnf install -y git gcc
          EOF" ${{ github.event.inputs.pull_request_number }} ${{ env.guest_port_in_use }}

          # Clean up and perform PR test on sev library as root user to fix OS permission denied issues
          ssh_guest_command "sudo su - <<EOF
          rm -rf ~/sev
          git clone https://github.com/LakshmiSaiHarika/sev.git
          cd ~/sev

          # Checkout the PR branch
          if [[ ${{ github.event_name }} == "pull_request_target" || ${{ github.event_name }} == "workflow_dispatch" ]]; then
            git fetch origin pull/${{ env.pr_number }}/head:${{ env.pr_branch }}
            git switch ${{ env.pr_branch }}
          fi 
          
          cargo test
          EOF" ${{ github.event.inputs.pull_request_number }} ${{ env.guest_port_in_use }}

      - name: Stop the active running SNP guest for this PR
        continue-on-error: true
        run: |
           export GUEST_NAME=snp-guest-${{ github.event.inputs.pull_request_number }}
           export HOST_SSH_PORT=${{ env.guest_port_in_use }}
           ./snp.sh stop-guests
           
      - name: Remove current active guest network port from GHAW network port file
        if: success() || failure()
        run: |
           python ${HOME}/automation_scripts/handle_guest_network_ports.py remove-ghaw-used-port-number ${{ env.guest_port_in_use }}

      - name: Cleanup SNP guest folder
        if: success() || failure()
        run: |
           rm -rf ${HOME}/snp/launch/snp-guest-${{ github.event.inputs.pull_request_number }}
           ssh-keygen -R [localhost]:${{ env.guest_port_in_use }}
  
