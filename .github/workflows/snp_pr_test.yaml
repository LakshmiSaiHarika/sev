name: SNP PR Test

on:
  pull_request_target:
    types: 
      - reopened
      - opened
      - edited
  workflow_dispatch:
  
jobs:
  snp_tests:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # RECOMMENDATION: Run snp-host-setup.yaml GH Action for SNP latest kernel setup on the self-host runner
              
      - name: Verify if SNP is enabled on the host
        run: |
              echo "Verifying SNP on the host..."
              if ! sudo dmesg | grep -i "SEV-SNP enabled" 2>&1 >/dev/null; then
                echo "SEV-SNP not enabled on the host."
                exit 1
              fi
              echo "SEV-SNP is enabled on the host."

      # - name: SEV library PR test on the host
      #   run: |
      #         # Give user access to /dev/sev to run cargo tests w/o permission issues
      #         sudo usermod -a -G kvm $USER
      #         sudo setfacl -m g:kvm:rw /dev/sev

      #         rm -rf ~/sev
      #         git clone https://github.com/virtee/sev.git
      #         cd sev
      #         git fetch origin pull/${{ github.event.pull_request.number }}/head:${{ github.head_ref }}
      #         git switch ${{ github.head_ref }}
      #         source "${HOME}/.cargo/env" 2>/dev/null || true

      #         if ! command -v rustc &> /dev/null; then
      #           echo "Installing Rust..."
      #           curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -sSf | sh -s -- -y
      #           source "${HOME}/.cargo/env" 2>/dev/null
      #         fi

      #         cargo test -- --skip snp
 
      - name: SEV library PR test on the guest
        run: |
          echo "Testing SEV on the guest..."
          rm -rf ~/snp.sh
          wget https://raw.githubusercontent.com/LakshmiSaiHarika/sev-utils/Fedora-Latest-SNP-kernel-Upstream/tools/snp.sh
          chmod +x snp.sh
          ./snp.sh launch-guest
  
          # SSH guest commands
          GUEST_SSH_KEY_PATH="${HOME}/snp/launch/snp-guest-key"
          if [ ! -f "${GUEST_SSH_KEY_PATH}" ]; then
            echo "SSH key not present, cannot verify guest SNP enabled."
            exit 1
          fi
  
          ssh_guest_command() {
            command="$1"
            ssh -p 10022 -i "${GUEST_SSH_KEY_PATH}" -o "StrictHostKeyChecking no" -o "PasswordAuthentication=no" -o ConnectTimeout=1 amd@localhost "${command}"
          }
  
          verify_snp_guest() {
            local snp_enabled=$(ssh_guest_command "sudo dmesg | grep 'Memory Encryption Features active:.*SEV-SNP'")
            if [[ -n "${snp_enabled}" ]]; then
              echo "SNP is Enabled"
            else
              echo "SNP is NOT Enabled"
              exit 1
            fi
          }
  
          verify_snp_guest
  
          # Install sev dependencies as a root user
           ssh_guest_command "sudo su - <<EOF
           curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -sSf | sh -s -- -y
           source "${HOME}/.cargo/env" 2>/dev/null
           sudo dnf install -y git gcc
          EOF"
  
          # Clean up previous sev, clone and perform PR test on sev library as root user to fix OS permission denied issues
          ssh_guest_command "sudo su - <<EOF
          rm -rf ~/sev
          git clone https://github.com/virtee/sev.git
          cd ~/sev
          git fetch origin pull/${{ github.event.pull_request.number }}/head:${{ github.head_ref }}
          git switch ${{ github.head_ref }}
          cargo test
          EOF"
